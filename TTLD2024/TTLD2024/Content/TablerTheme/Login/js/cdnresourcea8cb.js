Ext.override(Ext.Component,{constructor:function(config){var me=this,misacls='';if(!config){config={};}
if(me.misacls){misacls=me.misacls;}
if(config.cls){if(!Ext.isEmpty(misacls)){config.cls=misacls+' '+config.cls;}}else{if(!Ext.isEmpty(misacls)){config.cls=misacls;}}
config.tooltipType='title';config.labelSeparator='';me.callParent(arguments);},onMouseDown:function(e){var me=this,focusTask=me.focusTask,owner=me.getRefOwner(),preventFocus=e.pointerType==='touch',target,dom,skipFronting;if(me.floating&&(!focusTask||!focusTask.id)){if(me.owns(Ext.Element.getActiveElement())){preventFocus=true;}
target=e.target;dom=me.el.dom;while(!preventFocus&&target&&target!==dom){if(Ext.fly(target).isFocusable()){preventFocus=true;}
target=target.parentNode;}
var oComponent=Ext.WindowManager.getActive()
skipFronting=oComponent===me&&(target===dom||preventFocus);if(!skipFronting){if(oComponent&&((oComponent.xtype==="editor"&&oComponent.field instanceof MISA.Control.MISACombobox)||oComponent.up()instanceof MISA.Control.MISACombobox)){}else{me.toFront(preventFocus);}}
if(!preventFocus&&owner&&owner.containsFocus){e.preventDefault();}}},});Ext.override(Ext.form.field.Base,{showErrorTip:function(config){var me=this;var tip=Ext.ComponentManager.get("ext-form-error-tip");var target=Ext.getDom(me.getInputId()),rect=target.getBoundingClientRect(),xy=[rect.right,rect.top-20];tip.showTipCustom(target,xy);},});Ext.override(Ext.tip.QuickTip,{showTipCustom:function(target,xy){var me=this,hasShowDelay,hideAction,delay,elTarget,cfg,ns,tipConfig,autoHide,targets,targetEl,value,key;me.targetXY=xy;elTarget=Ext.fly(target,'_quicktip-target');cfg=me.tagConfig;ns=cfg.namespace;tipConfig=me.getTipCfg(target,window.event||null);if(tipConfig){if(tipConfig.target){target=tipConfig.target;elTarget=Ext.fly(target,'_quicktip-target');}
autoHide=elTarget.getAttribute(ns+cfg.hide);me.activeTarget={el:target,text:tipConfig.text,width:+elTarget.getAttribute(ns+cfg.width)||null,autoHide:autoHide!="user"&&autoHide!=='false',title:elTarget.getAttribute(ns+cfg.title),cls:elTarget.getAttribute(ns+cfg.cls),align:elTarget.getAttribute(ns+cfg.align),showDelay:parseInt(elTarget.getAttribute(ns+cfg.showDelay)||0,10),hideAction:elTarget.getAttribute(ns+cfg.hideAction),anchorTarget:elTarget.getAttribute(ns+cfg.anchorTarget)};if(!me.initialConfig.hasOwnProperty('anchor')){me.anchor=elTarget.getAttribute(ns+cfg.anchor);}
if(me.anchor&&!me.initialConfig.hasOwnProperty('anchorTarget')){me.anchorTarget=me.activeTarget.anchorTarget||target;}
me.dismissDelay=2000;me.showAt(xy);}},getTipCfg:function(target,event){var titleText=target.title,cfg=this.tagConfig,attr=cfg.attr||(cfg.attr=cfg.namespace+cfg.attribute),text;if(this.interceptTitles&&titleText&&Ext.isString(titleText)){target.setAttribute(attr,titleText);target.removeAttribute('title');return{text:titleText};}else{target=Ext.fly(target).findParent(function(dom){return(text=dom.getAttribute(attr));});if(target){return{target:target,text:text};}}},});Ext.override(Ext.data.Store,{getModelColumns:function(){var me=this,res=[],fields=me.getModel().getFields();if(fields){var entityConfig=null;if(me.grid){entityConfig=MISA.CommonFn.getEntityConfig(me.grid.entityName);}
Ext.each(fields,function(item){if(!entityConfig||entityConfig.hasOwnProperty(item.name)){res.push(item.name);}});}
return res.join(',');},});Ext.override(Ext.picker.Month,{constructor:function(config){config.okText='Đồng ý';config.cancelText='Hủy bỏ';this.callParent(arguments);},beforeRender:function(){var me=this,i=0,months=[],shortName=this.getShortMonthName,monthLen=me.monthOffset,margin=me.monthMargin,style='';me.callParent();for(;i<monthLen;++i){months.push(shortName(i),shortName(i+monthLen));}
if(Ext.isDefined(margin)){style='margin: 0 '+margin+'px;';}
Ext.apply(me.renderData,{months:months,years:me.getYears(),showButtons:me.showButtons,monthStyle:style});},getShortMonthName:function(month){return 'Th '+ ++month;}});Ext.override(Ext.picker.Date,{constructor:function(config){config.startDay=1;this.renderTpl=['<div id="{id}-innerEl" data-ref="innerEl">','<div class="{baseCls}-header">','<div id="{id}-prevEl" data-ref="prevEl" class="{baseCls}-prev {baseCls}-arrow" role="button" title="{prevText}"></div>','<div id="{id}-middleBtnEl" data-ref="middleBtnEl" class="{baseCls}-month" role="heading">{%this.renderMonthBtn(values, out)%}</div>','<div id="{id}-nextEl" data-ref="nextEl" class="{baseCls}-next {baseCls}-arrow" role="button" title="{nextText}"></div>','</div>','<table role="grid" id="{id}-eventEl" data-ref="eventEl" class="{baseCls}-inner" {%','if (values.$comp.focusable) {out.push("tabindex=\\"0\\"");}','%} cellspacing="0">','<thead><tr role="row">','<tpl for="dayNames">','<th role="columnheader" class="{parent.baseCls}-column-header" aria-label="{.}">','<div role="presentation" class="{parent.baseCls}-column-header-inner misa-short-day-of-week">{#:this.getShortDayOfWeek}</div>','</th>','</tpl>','</tr></thead>','<tbody><tr role="row">','<tpl for="days">','{#:this.isEndOfWeek}','<td role="gridcell">','<div hidefocus="on" class="{parent.baseCls}-date"></div>','</td>','</tpl>','</tr></tbody>','</table>','<tpl if="showToday">','<div id="{id}-footerEl" data-ref="footerEl" role="presentation" class="{baseCls}-footer">{%this.renderTodayBtn(values, out)%}</div>','</tpl>','</div>',{firstInitial:function(value){return Ext.picker.Date.prototype.getDayInitial(value);},isEndOfWeek:function(value){value--;var end=value%7===0&&value!==0;return end?'</tr><tr role="row">':'';},renderTodayBtn:function(values,out){Ext.DomHelper.generateMarkup(values.$comp.todayBtn.getRenderTree(),out);},renderMonthBtn:function(values,out){Ext.DomHelper.generateMarkup(values.$comp.monthBtn.getRenderTree(),out);},getShortDayOfWeek:function(value){return value<7?'T'+(value+1):'CN';}}];this.callParent(arguments);},onSelect:function(){var me=this;me.callParent(arguments);var field=me.up('datefield');if(field){field.fireEvent('pickerItemSelect',me,field.getValue(),field);}},});Ext.Date.monthNames=["Tháng Giêng","Tháng Hai","Tháng Ba","Tháng Tư","Tháng Năm","Tháng Sáu","Tháng Bảy","Tháng Tám","Tháng Chín","Tháng Mười","Tháng Mười Một","Tháng Mười Hai"];Ext.Date.dayNames=["Chủ Nhật","Thứ Hai","Thứ Ba","Thứ Tư","Thứ Năm","Thứ Sáu","Thứ Bảy"];Ext.override(Ext.tree.View,{beforeCheckOnTree:function(record){var me=this,bValid=true,tree=me.up('misatreepanel');bValid=tree.beforeCheckOnTreeGrid(record);if(bValid===undefined||bValid===null){bValid=true;}
return bValid;},onCellClick:function(cell,cellIndex,record,row,rowIndex,e){var me=this,column=e.position.column;if(column.isTreeColumn){if(e.getTarget(me.checkboxSelector,cell)&&record.get('checked')!=null){if(me.beforeCheckOnTree(record)){me.onCheckChange(e);}
if(column.stopSelection){e.stopSelection=true;}}
else if(e.getTarget(me.expanderSelector,cell)&&record.isExpandable()){me.getNavigationModel().setPosition(e.position);me.toggle(record,e.ctrlKey);e.nodeToggled=true;}}},});Ext.override(Ext.view.BoundList,{childEls:['listWrap','listEl',],timeout:0,isCreateSearchField:false,checkChangeBuffer:50,renderTpl:['<tpl if="values.$comp.isCreateSearchField">','<div id="{id}-searchFieldEl" name="searchFieldEl" data-ref="searchFieldEl" class="m-boundlist-searchcontainer"><input type="text" class="m-boundlist-searchfield" /></div>','</tpl>','<div id="{id}-listWrap" data-ref="listWrap" role="presentation" class="{baseCls}-list-ct ',Ext.dom.Element.unselectableCls,'">','<ul id="{id}-listEl" data-ref="listEl" class="'+Ext.baseCSSPrefix+'list-plain">','</ul>','</div>','{%','var pagingToolbar=values.$comp.pagingToolbar;','if (pagingToolbar) {','Ext.DomHelper.generateMarkup(pagingToolbar.getRenderTree(), out);','}','%}',{disableFormats:true}],initComponent:function(){var me=this,baseCls=me.baseCls,itemCls=me.itemCls;me.selectedItemCls=baseCls+'-selected';if(me.trackOver){me.overItemCls=baseCls+'-item-over';}
me.itemSelector="."+itemCls;me.scrollerSelector='ul.'+Ext.baseCSSPrefix+'list-plain';if(me.floating){me.addCls(baseCls+'-floating');}
if(!me.tpl){me.tpl=new Ext.XTemplate('<tpl for=".">','<li role="option" unselectable="on" class="'+itemCls+'">'+me.getInnerTpl(me.displayField)+'</li>','</tpl>');}else if(!me.tpl.isTemplate){me.tpl=new Ext.XTemplate(me.tpl);}
me.checkChangeTask=new Ext.util.DelayedTask(me.checkChange,me);me.callParent();},afterRender:function(){var me=this;me.callParent(arguments);var divSearchField=me.el.first(),inputSearchField=divSearchField.first();me.inputSearchField=inputSearchField;inputSearchField.on('keydown',function(e,sender){me.onSearchFieldSpecialKey(sender,e)},me);inputSearchField.on('input',me.onSearchFieldInput,me);},getSearchValue:function(){var me=this,res='';if(me.inputSearchField){res=me.inputSearchField.dom.value;}
return res;},onSearchFieldInput:function(e){var me=this;me.checkChangeTask.delay(me.checkChangeBuffer);},checkChange:function(){var me=this,newVal,oldVal;if(!me.suspendCheckChange){newVal=me.getSearchValue();oldVal=me.lastSearchValue;if(!me.isDestroyed&&me.didValueChange(newVal,oldVal)){me.lastSearchValue=newVal;me.onSearchTextChanged(me,newVal,oldVal);}}},didValueChange:function(newVal,oldVal){return(newVal!=oldVal);},privates:{getTargetEl:function(){return this.listEl;},getOverflowEl:function(){return this.listWrap;},finishRenderChildren:function(){var toolbar=this.pagingToolbar;this.callParent(arguments);}},onHide:function(){var me=this;if(me.isCreateSearchField&&me.inputSearchField){me.inputSearchField.dom.value='';if(me.store){me.store.clearFilter();}}
Ext.Component.prototype.onHide.call(this,arguments);},onShow:function(){var me=this,el=me.listWrap;me.callParent(arguments);if(me.isCreateSearchField&&me.inputSearchField){me.inputSearchField.dom.value='';me.inputSearchField.focus();}},updateLayout:function(){var me=this,el=me.listWrap;me.callParent(arguments);if(me.isCreateSearchField){if(el){el.setHeight(me.getHeight()-34);}}},onSearchTextChanged:function(sender,newValue,oldValue){var me=this;clearTimeout(me.timeout);if(me.pickerField&&typeof me.pickerField.onSearchFieldChanged=='function'){me.timeout=setTimeout(()=>me.pickerField.onSearchFieldChanged(sender,newValue,oldValue),500);}},onSearchFieldSpecialKey:function(sender,e){if(this.navigationModel){switch(e.keyCode){case e.DOWN:this.navigationModel.onKeyDown(e);break;case e.UP:this.navigationModel.onKeyUp(e);break;case e.TAB:this.navigationModel.onKeyTab(e);break;case e.ENTER:var boundList=this;this.navigationModel.onKeyEnter(e);break;}}},getRefItems:function(){var result=this.callParent(),toolbar=this.pagingToolba,searchField=this.searchField;if(toolbar){result.push(toolbar);}
if(searchField){result.push(searchField);}
return result;},refresh:function(){var me=this,tpl=me.tpl,toolbar=me.pagingToolbar,searchField=me.searchField,rendered=me.rendered;tpl.field=me.pickerField;tpl.store=me.store;me.callParent();tpl.field=tpl.store=null;if(rendered&&toolbar&&toolbar.rendered&&!me.preserveScrollOnRefresh){me.el.appendChild(toolbar.el,true);}
if(rendered&&searchField&&searchField.rendered&&!me.preserveScrollOnRefresh){me.el.appendChild(searchField.el,true);}},saveFocusState:function(){var me=this;if(me.isCreateSearchField&&me.inputSearchField){return Ext.emptyFn;}else{return me.callParent();}},});Ext.override(Ext.net.DirectEvent,{showFailure:function(response,errorMsg){var me=this;if(response.statusText==='communication failure'){MISA.MessageBox.showError('Kết nối internet tạm thời gián đoạn. Vui lòng thử lại!');}else{MISA.MessageBox.showError('Đã có lỗi xảy ra trong quá trình gửi yêu cầu lên máy chủ. Nhấn F5 để thử lại, nếu vẫn có lỗi vui lòng liên hệ MISA để được trợ giúp.');}},});Ext.override(Ext.view.Table,{tpl:['{%','view = values.view;','if (!(columns = values.columns)) {','columns = values.columns = view.ownerCt.getVisibleColumnManager().getColumns();','}','values.fullWidth = 0;','for (i = 0, len = columns.length; i < len; i++) {','column = columns[i];','values.fullWidth += (column.cellWidth = column.lastBox ? column.lastBox.width : column.width || column.minWidth);','}','tableCls=values.tableCls=[];','%}','<div class="'+Ext.baseCSSPrefix+'grid-item-container" role="presentation" style="width:{fullWidth}px">','{[view.renderTHead(values, out, parent)]}','{%','view.renderRows(values.rows, values.columns, values.viewStartIndex, out);','%}','{[view.renderTFoot(values, out, parent)]}','</div>','{[view.renderTInsertRow(values, out, parent)]}','{% ','view = columns = column = null;','%}',{definitions:'var view, tableCls, columns, i, len, column;',priority:0}],tInsertRowSelector:'div.'+Ext.baseCSSPrefix+'grid-item-insert-row',tInsertRowTextLabel:'Bấm vào đây để thêm mới',getNodeTInsertRow:function(){var target=this.getTargetEl(),selector=this.tInsertRowSelector;return selector?target.down(selector,true):target;},renderTInsertRow:function(values,out,parent){var me=this,tInsertRow;if(values.view&&values.view.grid&&values.view.grid instanceof Ext.grid.GridPanel){var grid=values.view.grid;if(grid.allowInsertRow&&grid.editable&&!grid.readOnly){me.tInsertRowId='grid-item-insert-row-'+grid.id;tInsertRow='<div style="width:100%" grid-componentid="'+grid.id+'" id="'+me.tInsertRowId+'" class="'+Ext.baseCSSPrefix+'grid-item-insert-row">'+me.tInsertRowTextLabel+'</div>';}}
return tInsertRow;},setHiddenTInsertRow:function(hidden){var me=this;if(me.tInsertRowId){var el=Ext.get(me.tInsertRowId);if(el){if(hidden){el.hide();}else{el.show();}}}},clearViewEl:function(leaveNodeContainer){var me=this,tInsertRow=me.getNodeTInsertRow();me.callParent(arguments);if(tInsertRow&&!leaveNodeContainer){tInsertRow.remove();}}})
Ext.override(Ext.grid.NavigationModel,{onContainerMouseDown:function(view,mousedownEvent){var me=this,context=new Ext.grid.CellContext(view),lastFocused,position;Ext.view.NavigationModel.prototype.onContainerMouseDown.call(this,view,mousedownEvent);lastFocused=view.lastFocused;position=(view.actionableMode&&view.actionPosition)||lastFocused;if(!position||lastFocused==='scrollbar'){return;}
context.setPosition(position.record,position.column);mousedownEvent.position=context;me.attachClosestCell(mousedownEvent);if(!me.position.isEqual(context)){me.setPosition(context,null,mousedownEvent);}},onKeyTab:function(keyEvent){const me=this;me.callParent(arguments);const view=keyEvent.position.view;if(view){const viewBody=view.ariaEl.dom;if(view.headerCt){const viewHeader=view.headerCt.ariaEl.dom;if(viewBody.scrollLeft!=viewHeader.scrollLeft||!viewBody.scrollLeft||!viewHeader.scrollLeft){viewHeader.scrollLeft=viewBody.scrollLeft;}}}}})
Ext.override(Ext.grid.feature.AbstractSummary,{getSummary:function(store,type,field,group){var me=this,isGrouped=!!group,item=isGrouped?group:store,data,countData=0,sumData=0,result;if(type){if(Ext.isFunction(type)){if(isGrouped){return item.aggregate(field,type);}else{return item.aggregate(type,null,false,[field]);}}
data=item.getData().items;if(store.grid.isTree&&store.grid.summaryAllRecords===false){data=data.filter(function(e){return e.childNodes.length==0});}
data=me.customDataBeforeCalculatorSummary(data,field);data=Ext.Array.map(data,function(e){return e.get(field)});countData=data.length;sumData=data.reduce(function(a,b){return a+b},0);switch(type){case 'count':result=countData;break;case 'min':result=Math.min(data);break;case 'max':result=Math.max(data);break;case 'sum':result=sumData;break;case 'average':result=(countData>0)?sumData/countData:'';break;default:result='';}
return result;}},customDataBeforeCalculatorSummary:function(data,field){return data;},})
Ext.override(Ext,{existsClass:function(className){if(Ext.ClassManager.get(className)){return true;}
return false;}});Ext.override(Ext.util.Collection,{onCollectionRefresh:function(source){var me=this,map={},indices={},i,item,items,key,length;items=source.items;const filterCollection=me.getFilters();const filterData=()=>{if(filterCollection&&typeof filterCollection.getCorrectFilterData==='function'){return filterCollection.getCorrectFilterData()||[];}
return Ext.Array.filter(items,me.getFilterFn());}
items=me.filtered&&me.getAutoFilter()?filterData():items.slice(0);if(me.sorted){me.sortData(items);}
me.items=items;me.length=length=items.length;me.map=map;me.indices=indices;for(i=0;i<length;++i){key=me.getKey(item=items[i]);map[key]=item;indices[key]=i;}
me.notify('refresh');}})